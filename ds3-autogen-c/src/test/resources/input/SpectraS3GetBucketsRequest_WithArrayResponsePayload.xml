<Data>
    <Contract>
        <RequestHandlers>
            <RequestHandler Classification="spectrads3" Name="com.spectralogic.s3.server.handler.reqhandler.spectrads3.bucket.GetBucketsRequestHandler">
                <Request Action="LIST" HttpVerb="GET" IncludeIdInPath="false" Resource="BUCKET" ResourceType="NON_SINGLETON">
                    <OptionalQueryParams>
                        <Param Name="DataPolicyId" Type="java.util.UUID" />
                        <Param Name="LastPage" Type="void" />
                        <Param Name="Name" Type="java.lang.String" />
                        <Param Name="PageLength" Type="int" />
                        <Param Name="PageOffset" Type="int" />
                        <Param Name="PageStartMarker" Type="java.util.UUID" />
                        <Param Name="UserId" Type="java.util.UUID" />
                    </OptionalQueryParams>
                    <RequiredQueryParams />
                </Request>
                <ResponseCodes>
                    <ResponseCode>
                        <Code>200</Code>
                        <ResponseTypes>
                            <ResponseType ComponentType="com.spectralogic.s3.common.dao.domain.ds3.Bucket" Type="array" />
                        </ResponseTypes>
                    </ResponseCode>
                    <ResponseCode>
                        <Code>403</Code>
                        <ResponseTypes>
                            <ResponseType Type="com.spectralogic.s3.server.domain.HttpErrorResultApiBean" />
                        </ResponseTypes>
                    </ResponseCode>
                </ResponseCodes>
                <Version>1.8C885A22F5F8EA044A104A020AE563D5</Version>
            </RequestHandler>
        </RequestHandlers>
    </Contract>
</Data>
<!--
<RequestHandler Name="com.spectralogic.s3.server.handler.reqhandler.spectrads3.bucket.GetBucketsRequestHandler">
    <Documentation>Get all buckets.</Documentation>
    <RequestRequirements>Must be REST action LIST</RequestRequirements>
    <RequestRequirements>Must be REST domain BUCKET</RequestRequirements>
    <RequestRequirements>Must be a DS3-style request</RequestRequirements>
    <RequestRequirements>
        Query Parameters Required: [], Optional: [dataPolicyId, last_page, name, page_length, page_offset, page_start_marker, userId]
    </RequestRequirements>
    <SampleResponses>
        <HttpRequest>
            GET '_rest_/bucket' with query parameters {name=MD5} and headers {}.
        </HttpRequest>
        <HttpResponse>
            <Error><Code>AccessDenied</Code><HttpErrorCode>403</HttpErrorCode><Message>Authorization is required for this request.</Message><Resource>/_rest_/bucket</Resource><ResourceId>220</ResourceId></Error> with headers {x-amz-request-id=220, Content-Type=text/xml, RequestHandler-Version=1.8C885A22F5F8EA044A104A020AE563D5}.
        </HttpResponse>
        <HttpResponseCode>403</HttpResponseCode>
        <HttpResponseType>
            com.spectralogic.s3.server.domain.HttpErrorResultApiBean
        </HttpResponseType>
        <Test>
            com.spectralogic.s3.server.handler.reqhandler.spectrads3.bucket.GetBucketsRequestHandler_Test.testGetBucketsAsAnonymousRequestNotAllowed
        </Test>
    </SampleResponses>
    <SampleResponses>
        <HttpRequest>
            GET '_rest_/bucket' with query parameters {name=MD5} and headers {Internal-Request=1}.
        </HttpRequest>
        <HttpResponse>
            <Data></Data> with headers {x-amz-request-id=215, Content-Type=text/xml, RequestHandler-Version=1.8C885A22F5F8EA044A104A020AE563D5}.
        </HttpResponse>
        <HttpResponseCode>200</HttpResponseCode>
        <HttpResponseType>
            com.spectralogic.s3.common.dao.domain.ds3.Bucket;
        </HttpResponseType>
        <Test>
            com.spectralogic.s3.server.handler.reqhandler.spectrads3.bucket.GetBucketsRequestHandler_Test.testGetBucketsAsInternalRequestReturnsAllBuckets
        </Test>
    </SampleResponses>
    <SampleResponses>
        <HttpRequest>
            GET '_rest_/bucket' with query parameters {} and headers {Impersonate-User=user}.
        </HttpRequest>
        <HttpResponse>
            <Data><Bucket><CreationDate>2016-01-27T00:28:45.000Z</CreationDate><DataPolicyId>d3fd402e-6b8f-4332-bbfb-2ceefa4cb093</DataPolicyId><Id>b8536f7d-80b9-458f-a1e5-9f37be6fe667</Id><LastPreferredChunkSizeInBytes/><LogicalUsedCapacity>0</LogicalUsedCapacity><Name>a</Name><UserId>870f35bf-19e7-41d3-b6d4-368c2a3df831</UserId></Bucket><Bucket><CreationDate>2016-01-27T00:28:45.000Z</CreationDate><DataPolicyId>d3fd402e-6b8f-4332-bbfb-2ceefa4cb093</DataPolicyId><Id>ecdaf07d-b2ca-4658-bd55-6f39cebd8c16</Id><LastPreferredChunkSizeInBytes/><LogicalUsedCapacity>1</LogicalUsedCapacity><Name>b</Name><UserId>870f35bf-19e7-41d3-b6d4-368c2a3df831</UserId></Bucket></Data> with headers {x-amz-request-id=216, Content-Type=text/xml, RequestHandler-Version=1.8C885A22F5F8EA044A104A020AE563D5}.
        </HttpResponse>
        <HttpResponseCode>200</HttpResponseCode>
        <HttpResponseType>
            com.spectralogic.s3.common.dao.domain.ds3.Bucket;
        </HttpResponseType>
        <Test>
            com.spectralogic.s3.server.handler.reqhandler.spectrads3.bucket.GetBucketsRequestHandler_Test.testGetBucketsReturnsBucketsWithLogicalCapacities
        </Test>
    </SampleResponses>
    <SampleResponses>
        <HttpRequest>
            GET '_rest_/bucket' with query parameters {name=MD5} and headers {Impersonate-User=user}.
        </HttpRequest>
        <HttpResponse>
            <Data></Data> with headers {x-amz-request-id=217, Content-Type=text/xml, RequestHandler-Version=1.8C885A22F5F8EA044A104A020AE563D5}.
        </HttpResponse>
        <HttpResponseCode>200</HttpResponseCode>
        <HttpResponseType>
            com.spectralogic.s3.common.dao.domain.ds3.Bucket;
        </HttpResponseType>
        <Test>
            com.spectralogic.s3.server.handler.reqhandler.spectrads3.bucket.GetBucketsRequestHandler_Test.testGetBucketsWithOptionalFilterParamsWorksProvidedThatOptionalFilterParamsAreValid
        </Test>
    </SampleResponses>
    <SampleUrl>
        http[s]://datapathdnsnameofappliance/_rest_/bucket/[?last_page][&page_length={32-bit integer}][&page_offset={32-bit integer}][&page_start_marker={unique identifier or attribute}][&data_policy_id={unique identifier or attribute}][&name={text}][&user_id={unique identifier or attribute}]
    </SampleUrl>
    <Version>1.8C885A22F5F8EA044A104A020AE563D5</Version>
</RequestHandler>
-->