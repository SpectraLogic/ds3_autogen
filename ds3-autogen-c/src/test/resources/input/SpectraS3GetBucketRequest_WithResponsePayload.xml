<Data>
    <Contract>
        <RequestHandlers>
            <RequestHandler Classification="spectrads3" Name="com.spectralogic.s3.server.handler.reqhandler.spectrads3.bucket.GetBucketRequestHandler">
                <Request Action="SHOW" HttpVerb="GET" IncludeIdInPath="true" Resource="BUCKET" ResourceType="NON_SINGLETON">
                    <OptionalQueryParams />
                    <RequiredQueryParams />
                </Request>
                <ResponseCodes>
                    <ResponseCode>
                        <Code>200</Code>
                        <ResponseTypes>
                            <ResponseType Type="com.spectralogic.s3.common.dao.domain.ds3.Bucket" />
                        </ResponseTypes>
                    </ResponseCode>
                    <ResponseCode>
                        <Code>403</Code>
                        <ResponseTypes>
                            <ResponseType Type="com.spectralogic.s3.server.domain.HttpErrorResultApiBean" />
                        </ResponseTypes>
                    </ResponseCode>
                </ResponseCodes>
                <Version>1.4FAD1C67C3247080EFA33C224B87544D</Version>
            </RequestHandler>
        </RequestHandlers>
    </Contract>
</Data>

<!--
<RequestHandler Name="com.spectralogic.s3.server.handler.reqhandler.spectrads3.bucket.GetBucketRequestHandler">
    <Documentation>Get the specified bucket.</Documentation>
    <RequestRequirements>Must be REST action SHOW</RequestRequirements>
    <RequestRequirements>Must be REST domain BUCKET</RequestRequirements>
    <RequestRequirements>Must be a DS3-style request</RequestRequirements>
    <RequestRequirements>Query Parameters Required: [], Optional: []</RequestRequirements>
    <SampleResponses>
        <HttpRequest>GET '_rest_/bucket' with query parameters {} and headers {Impersonate-User=user}.</HttpRequest>
        <HttpResponse>
            <Data>
                <Bucket>
                    <CreationDate>2016-01-27T00:28:45.000Z</CreationDate>
                    <DataPolicyId>d3fd402e-6b8f-4332-bbfb-2ceefa4cb093</DataPolicyId>
                    <Id>b8536f7d-80b9-458f-a1e5-9f37be6fe667</Id>
                    <LastPreferredChunkSizeInBytes />
                    <LogicalUsedCapacity>0</LogicalUsedCapacity>
                    <Name>a</Name>
                    <UserId>870f35bf-19e7-41d3-b6d4-368c2a3df831</UserId>
                </Bucket>
                <Bucket>
                    <CreationDate>2016-01-27T00:28:45.000Z</CreationDate>
                    <DataPolicyId>d3fd402e-6b8f-4332-bbfb-2ceefa4cb093</DataPolicyId>
                    <Id>ecdaf07d-b2ca-4658-bd55-6f39cebd8c16</Id>
                    <LastPreferredChunkSizeInBytes />
                    <LogicalUsedCapacity>1</LogicalUsedCapacity>
                    <Name>b</Name>
                    <UserId>870f35bf-19e7-41d3-b6d4-368c2a3df831</UserId>
                </Bucket>
            </Data>
            with headers {x-amz-request-id=216, Content-Type=text/xml, RequestHandler-Version=1.8C885A22F5F8EA044A104A020AE563D5}.
        </HttpResponse>
        <HttpResponseCode>200</HttpResponseCode>
        <HttpResponseType>[Lcom.spectralogic.s3.common.dao.domain.ds3.Bucket;</HttpResponseType>
        <Test>com.spectralogic.s3.server.handler.reqhandler.spectrads3.bucket.GetBucketsRequestHandler_Test.testGetBucketsReturnsBucketsWithLogicalCapacities</Test>
    </SampleResponses>
    <Version>1.4FAD1C67C3247080EFA33C224B87544D</Version>
</RequestHandler>
-->